.directEdit.svelte-6gzs73.svelte-6gzs73{display:block;position:absolute;top:0;bottom:0;right:0;left:0;z-index:10}.directEdit.svelte-6gzs73 input.svelte-6gzs73{position:absolute;border:solid 1px gray}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlyZWN0RWRpdC5zdmVsdGUiLCJzb3VyY2VzIjpbIkRpcmVjdEVkaXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSBcInN2ZWx0ZVwiO1xuXG4gICAgY29uc3QgZGlzcGF0Y2hlciA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gICAgbGV0IG9wZW5lZCA9IGZhbHNlO1xuICAgIGxldCBpbnB1dFZhbHVlID0gXCJcIjtcbiAgICBsZXQgeCA9IDA7XG4gICAgbGV0IHkgPSAwO1xuICAgIGxldCB3ID0gMDtcbiAgICBsZXQgaCA9IDA7XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gc3RhcnQoY29tbWFuZCkge1xuICAgICAgICBpZiAoY29tbWFuZCkge1xuICAgICAgICAgICAgb3BlbmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlucHV0VmFsdWUgPSBjb21tYW5kLnZhbHVlO1xuICAgICAgICAgICAgeCA9IGNvbW1hbmQuYm91bmRzLng7XG4gICAgICAgICAgICB5ID0gY29tbWFuZC5ib3VuZHMueTtcbiAgICAgICAgICAgIHcgPSBjb21tYW5kLmJvdW5kcy53aWR0aDtcbiAgICAgICAgICAgIGggPSBjb21tYW5kLmJvdW5kcy5oZWlnaHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvcGVuZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgICBvcGVuZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbml0SW5wdXQoZWwpIHtcbiAgICAgICAgZWwuc2VsZWN0KCk7XG4gICAgICAgIGVsLmZvY3VzKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24ga2V5dXAoZXYpIHtcbiAgICAgICAgaWYgKGV2LmtleUNvZGUgPT0gMjcpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoZXIoXCJjaGFuZ2VcIiwgeyBzdGF0dXM6IGZhbHNlLCB0ZXh0OiBcIlwiIH0pO1xuICAgICAgICAgICAgY2xvc2UoKTtcbiAgICAgICAgfSBlbHNlIGlmIChldi5rZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICBkaXNwYXRjaGVyKFwiY2hhbmdlXCIsIHsgc3RhdHVzOiB0cnVlLCB0ZXh0OiBpbnB1dFZhbHVlIH0pO1xuICAgICAgICAgICAgY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vdXNlVXAoZXYpIHtcbiAgICAgICAgZGlzcGF0Y2hlcihcImNoYW5nZVwiLCB7IHN0YXR1czogZmFsc2UsIHRleHQ6IFwiXCIgfSk7XG4gICAgICAgIGNsb3NlKCk7XG4gICAgfVxuPC9zY3JpcHQ+XG5cbnsjaWYgb3BlbmVkfVxuICAgIDxkaXYgY2xhc3M9XCJkaXJlY3RFZGl0XCIgb246bW91c2V1cD17bW91c2VVcH0+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgYmluZDp2YWx1ZT17aW5wdXRWYWx1ZX1cbiAgICAgICAgICAgIHN0eWxlPVwibGVmdDoge3h9cHg7IHRvcDoge3l9cHg7IHdpZHRoOiB7d31weDsgaGVpZ2h0OiB7aH1weFwiXG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICB1c2U6aW5pdElucHV0XG4gICAgICAgICAgICBvbjprZXl1cD17a2V5dXB9XG4gICAgICAgIC8+XG4gICAgPC9kaXY+XG57L2lmfVxuXG48c3R5bGU+XG4gICAgLmRpcmVjdEVkaXQge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgIH1cbiAgICAuZGlyZWN0RWRpdCBpbnB1dCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm9yZGVyOiBzb2xpZCAxcHggZ3JheTtcbiAgICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStESSxXQUFXLDRCQUFDLENBQUMsQUFDVCxPQUFPLENBQUUsS0FBSyxDQUNkLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEdBQUcsQ0FBRSxDQUFDLENBQ04sTUFBTSxDQUFFLENBQUMsQ0FDVCxLQUFLLENBQUUsQ0FBQyxDQUNSLElBQUksQ0FBRSxDQUFDLENBQ1AsT0FBTyxDQUFFLEVBQUUsQUFDZixDQUFDLEFBQ0QseUJBQVcsQ0FBQyxLQUFLLGNBQUMsQ0FBQyxBQUNmLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLE1BQU0sQ0FBRSxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQUFDMUIsQ0FBQyJ9*/
div.container.svelte-1wchab6.svelte-1wchab6{position:relative;width:100%;height:100%;overflow:hidden;font-family:Arial, Helvetica, sans-serif}div.palette.svelte-1wchab6.svelte-1wchab6{position:absolute;bottom:20px;left:100px;border-radius:5px;background:white;box-shadow:2px 2px 5px gray}.palette.svelte-1wchab6 ul.svelte-1wchab6{padding:0px;margin:10px}.palette.svelte-1wchab6 li.svelte-1wchab6{display:inline-block}li.spacer.svelte-1wchab6.svelte-1wchab6{margin-left:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
html,body{height:100%;margin:0;padding:0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8RWRpdG9yIC8+XG5cbjxzdHlsZT5cbiAgICA6Z2xvYmFsKGh0bWwsYm9keSkge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuICAgIGltcG9ydCBFZGl0b3IgZnJvbSAnLi9FZGl0b3InO1xuPC9zY3JpcHQ+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdZLFNBQVMsQUFBRSxDQUFDLEFBQ2hCLE1BQU0sQ0FBRSxJQUFJLENBQ1osTUFBTSxDQUFFLENBQUMsQ0FDVCxPQUFPLENBQUUsQ0FBQyxBQUNkLENBQUMifQ==*/

/*# sourceMappingURL=styles.css.map*/