div.container.svelte-1wchab6.svelte-1wchab6{position:relative;width:100%;height:100%;overflow:hidden;font-family:Arial, Helvetica, sans-serif}div.palette.svelte-1wchab6.svelte-1wchab6{position:absolute;bottom:20px;left:100px;border-radius:5px;background:white;box-shadow:2px 2px 5px gray}.palette.svelte-1wchab6 ul.svelte-1wchab6{padding:0px;margin:10px}.palette.svelte-1wchab6 li.svelte-1wchab6{display:inline-block}li.spacer.svelte-1wchab6.svelte-1wchab6{margin-left:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
html,body{height:100%;margin:0;padding:0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8RWRpdG9yIC8+XG5cbjxzdHlsZT5cbiAgICA6Z2xvYmFsKGh0bWwsYm9keSkge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuICAgIGltcG9ydCBFZGl0b3IgZnJvbSAnLi9FZGl0b3InO1xuPC9zY3JpcHQ+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdZLFNBQVMsQUFBRSxDQUFDLEFBQ2hCLE1BQU0sQ0FBRSxJQUFJLENBQ1osTUFBTSxDQUFFLENBQUMsQ0FDVCxPQUFPLENBQUUsQ0FBQyxBQUNkLENBQUMifQ==*/

/*# sourceMappingURL=styles.css.map*/